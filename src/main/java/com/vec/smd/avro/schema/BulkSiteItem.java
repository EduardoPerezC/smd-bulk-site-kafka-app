/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.vec.smd.avro.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BulkSiteItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4509481250647321473L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BulkUploadRequestItem\",\"namespace\":\"com.vec.smd.avro.schema\",\"fields\":[{\"name\":\"itemId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"vzSiteId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"zipCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressLine1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressLine2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"validationError\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BulkSiteItem> ENCODER =
      new BinaryMessageEncoder<BulkSiteItem>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BulkSiteItem> DECODER =
      new BinaryMessageDecoder<BulkSiteItem>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BulkSiteItem> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BulkSiteItem> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BulkSiteItem>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BulkUploadRequestItem to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BulkUploadRequestItem from a ByteBuffer. */
  public static BulkSiteItem fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Long itemId;
   private java.lang.String vzSiteId;
   private java.lang.String customerId;
   private java.lang.String customerName;
   private java.lang.String country;
   private java.lang.String state;
   private java.lang.String city;
   private java.lang.String zipCode;
   private java.lang.String addressLine1;
   private java.lang.String addressLine2;
   private java.lang.String status;
   private java.lang.String validationError;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BulkSiteItem() {}

  /**
   * All-args constructor.
   * @param itemId The new value for itemId
   * @param vzSiteId The new value for vzSiteId
   * @param customerId The new value for customerId
   * @param customerName The new value for customerName
   * @param country The new value for country
   * @param state The new value for state
   * @param city The new value for city
   * @param zipCode The new value for zipCode
   * @param addressLine1 The new value for addressLine1
   * @param addressLine2 The new value for addressLine2
   * @param status The new value for status
   * @param validationError The new value for validationError
   */
  public BulkSiteItem(java.lang.Long itemId, java.lang.String vzSiteId, java.lang.String customerId, java.lang.String customerName, java.lang.String country, java.lang.String state, java.lang.String city, java.lang.String zipCode, java.lang.String addressLine1, java.lang.String addressLine2, java.lang.String status, java.lang.String validationError) {
    this.itemId = itemId;
    this.vzSiteId = vzSiteId;
    this.customerId = customerId;
    this.customerName = customerName;
    this.country = country;
    this.state = state;
    this.city = city;
    this.zipCode = zipCode;
    this.addressLine1 = addressLine1;
    this.addressLine2 = addressLine2;
    this.status = status;
    this.validationError = validationError;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return itemId;
    case 1: return vzSiteId;
    case 2: return customerId;
    case 3: return customerName;
    case 4: return country;
    case 5: return state;
    case 6: return city;
    case 7: return zipCode;
    case 8: return addressLine1;
    case 9: return addressLine2;
    case 10: return status;
    case 11: return validationError;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: itemId = (java.lang.Long)value$; break;
    case 1: vzSiteId = (java.lang.String)value$; break;
    case 2: customerId = (java.lang.String)value$; break;
    case 3: customerName = (java.lang.String)value$; break;
    case 4: country = (java.lang.String)value$; break;
    case 5: state = (java.lang.String)value$; break;
    case 6: city = (java.lang.String)value$; break;
    case 7: zipCode = (java.lang.String)value$; break;
    case 8: addressLine1 = (java.lang.String)value$; break;
    case 9: addressLine2 = (java.lang.String)value$; break;
    case 10: status = (java.lang.String)value$; break;
    case 11: validationError = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'itemId' field.
   * @return The value of the 'itemId' field.
   */
  public java.lang.Long getItemId() {
    return itemId;
  }


  /**
   * Gets the value of the 'vzSiteId' field.
   * @return The value of the 'vzSiteId' field.
   */
  public java.lang.String getVzSiteId() {
    return vzSiteId;
  }


  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }


  /**
   * Gets the value of the 'customerName' field.
   * @return The value of the 'customerName' field.
   */
  public java.lang.String getCustomerName() {
    return customerName;
  }


  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.String getCountry() {
    return country;
  }


  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }


  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }


  /**
   * Gets the value of the 'zipCode' field.
   * @return The value of the 'zipCode' field.
   */
  public java.lang.String getZipCode() {
    return zipCode;
  }


  /**
   * Gets the value of the 'addressLine1' field.
   * @return The value of the 'addressLine1' field.
   */
  public java.lang.String getAddressLine1() {
    return addressLine1;
  }


  /**
   * Gets the value of the 'addressLine2' field.
   * @return The value of the 'addressLine2' field.
   */
  public java.lang.String getAddressLine2() {
    return addressLine2;
  }


  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Gets the value of the 'validationError' field.
   * @return The value of the 'validationError' field.
   */
  public java.lang.String getValidationError() {
    return validationError;
  }


  /**
   * Creates a new BulkUploadRequestItem RecordBuilder.
   * @return A new BulkUploadRequestItem RecordBuilder
   */
  public static com.vec.smd.avro.schema.BulkSiteItem.Builder newBuilder() {
    return new com.vec.smd.avro.schema.BulkSiteItem.Builder();
  }

  /**
   * Creates a new BulkUploadRequestItem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BulkUploadRequestItem RecordBuilder
   */
  public static com.vec.smd.avro.schema.BulkSiteItem.Builder newBuilder(com.vec.smd.avro.schema.BulkSiteItem.Builder other) {
    return new com.vec.smd.avro.schema.BulkSiteItem.Builder(other);
  }

  /**
   * Creates a new BulkUploadRequestItem RecordBuilder by copying an existing BulkUploadRequestItem instance.
   * @param other The existing instance to copy.
   * @return A new BulkUploadRequestItem RecordBuilder
   */
  public static com.vec.smd.avro.schema.BulkSiteItem.Builder newBuilder(com.vec.smd.avro.schema.BulkSiteItem other) {
    return new com.vec.smd.avro.schema.BulkSiteItem.Builder(other);
  }

  /**
   * RecordBuilder for BulkUploadRequestItem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BulkSiteItem>
    implements org.apache.avro.data.RecordBuilder<BulkSiteItem> {

    private java.lang.Long itemId;
    private java.lang.String vzSiteId;
    private java.lang.String customerId;
    private java.lang.String customerName;
    private java.lang.String country;
    private java.lang.String state;
    private java.lang.String city;
    private java.lang.String zipCode;
    private java.lang.String addressLine1;
    private java.lang.String addressLine2;
    private java.lang.String status;
    private java.lang.String validationError;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.vec.smd.avro.schema.BulkSiteItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.itemId)) {
        this.itemId = data().deepCopy(fields()[0].schema(), other.itemId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vzSiteId)) {
        this.vzSiteId = data().deepCopy(fields()[1].schema(), other.vzSiteId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerName)) {
        this.customerName = data().deepCopy(fields()[3].schema(), other.customerName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.country)) {
        this.country = data().deepCopy(fields()[4].schema(), other.country);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.city)) {
        this.city = data().deepCopy(fields()[6].schema(), other.city);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.zipCode)) {
        this.zipCode = data().deepCopy(fields()[7].schema(), other.zipCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addressLine1)) {
        this.addressLine1 = data().deepCopy(fields()[8].schema(), other.addressLine1);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.addressLine2)) {
        this.addressLine2 = data().deepCopy(fields()[9].schema(), other.addressLine2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.validationError)) {
        this.validationError = data().deepCopy(fields()[11].schema(), other.validationError);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BulkUploadRequestItem instance
     * @param other The existing instance to copy.
     */
    private Builder(com.vec.smd.avro.schema.BulkSiteItem other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.itemId)) {
        this.itemId = data().deepCopy(fields()[0].schema(), other.itemId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vzSiteId)) {
        this.vzSiteId = data().deepCopy(fields()[1].schema(), other.vzSiteId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerName)) {
        this.customerName = data().deepCopy(fields()[3].schema(), other.customerName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.country)) {
        this.country = data().deepCopy(fields()[4].schema(), other.country);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.city)) {
        this.city = data().deepCopy(fields()[6].schema(), other.city);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.zipCode)) {
        this.zipCode = data().deepCopy(fields()[7].schema(), other.zipCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addressLine1)) {
        this.addressLine1 = data().deepCopy(fields()[8].schema(), other.addressLine1);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.addressLine2)) {
        this.addressLine2 = data().deepCopy(fields()[9].schema(), other.addressLine2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.validationError)) {
        this.validationError = data().deepCopy(fields()[11].schema(), other.validationError);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'itemId' field.
      * @return The value.
      */
    public java.lang.Long getItemId() {
      return itemId;
    }

    /**
      * Sets the value of the 'itemId' field.
      * @param value The value of 'itemId'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setItemId(java.lang.Long value) {
      validate(fields()[0], value);
      this.itemId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'itemId' field has been set.
      * @return True if the 'itemId' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'itemId' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearItemId() {
      itemId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vzSiteId' field.
      * @return The value.
      */
    public java.lang.String getVzSiteId() {
      return vzSiteId;
    }

    /**
      * Sets the value of the 'vzSiteId' field.
      * @param value The value of 'vzSiteId'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setVzSiteId(java.lang.String value) {
      validate(fields()[1], value);
      this.vzSiteId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vzSiteId' field has been set.
      * @return True if the 'vzSiteId' field has been set, false otherwise.
      */
    public boolean hasVzSiteId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'vzSiteId' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearVzSiteId() {
      vzSiteId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setCustomerId(java.lang.String value) {
      validate(fields()[2], value);
      this.customerId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerName' field.
      * @return The value.
      */
    public java.lang.String getCustomerName() {
      return customerName;
    }

    /**
      * Sets the value of the 'customerName' field.
      * @param value The value of 'customerName'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setCustomerName(java.lang.String value) {
      validate(fields()[3], value);
      this.customerName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customerName' field has been set.
      * @return True if the 'customerName' field has been set, false otherwise.
      */
    public boolean hasCustomerName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customerName' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearCustomerName() {
      customerName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.String getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setCountry(java.lang.String value) {
      validate(fields()[4], value);
      this.country = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearCountry() {
      country = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setState(java.lang.String value) {
      validate(fields()[5], value);
      this.state = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearState() {
      state = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.String getCity() {
      return city;
    }

    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setCity(java.lang.String value) {
      validate(fields()[6], value);
      this.city = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearCity() {
      city = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'zipCode' field.
      * @return The value.
      */
    public java.lang.String getZipCode() {
      return zipCode;
    }

    /**
      * Sets the value of the 'zipCode' field.
      * @param value The value of 'zipCode'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setZipCode(java.lang.String value) {
      validate(fields()[7], value);
      this.zipCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'zipCode' field has been set.
      * @return True if the 'zipCode' field has been set, false otherwise.
      */
    public boolean hasZipCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'zipCode' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearZipCode() {
      zipCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressLine1' field.
      * @return The value.
      */
    public java.lang.String getAddressLine1() {
      return addressLine1;
    }

    /**
      * Sets the value of the 'addressLine1' field.
      * @param value The value of 'addressLine1'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setAddressLine1(java.lang.String value) {
      validate(fields()[8], value);
      this.addressLine1 = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'addressLine1' field has been set.
      * @return True if the 'addressLine1' field has been set, false otherwise.
      */
    public boolean hasAddressLine1() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'addressLine1' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearAddressLine1() {
      addressLine1 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressLine2' field.
      * @return The value.
      */
    public java.lang.String getAddressLine2() {
      return addressLine2;
    }

    /**
      * Sets the value of the 'addressLine2' field.
      * @param value The value of 'addressLine2'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setAddressLine2(java.lang.String value) {
      validate(fields()[9], value);
      this.addressLine2 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'addressLine2' field has been set.
      * @return True if the 'addressLine2' field has been set, false otherwise.
      */
    public boolean hasAddressLine2() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'addressLine2' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearAddressLine2() {
      addressLine2 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setStatus(java.lang.String value) {
      validate(fields()[10], value);
      this.status = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearStatus() {
      status = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'validationError' field.
      * @return The value.
      */
    public java.lang.String getValidationError() {
      return validationError;
    }

    /**
      * Sets the value of the 'validationError' field.
      * @param value The value of 'validationError'.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder setValidationError(java.lang.String value) {
      validate(fields()[11], value);
      this.validationError = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'validationError' field has been set.
      * @return True if the 'validationError' field has been set, false otherwise.
      */
    public boolean hasValidationError() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'validationError' field.
      * @return This builder.
      */
    public com.vec.smd.avro.schema.BulkSiteItem.Builder clearValidationError() {
      validationError = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BulkSiteItem build() {
      try {
        BulkSiteItem record = new BulkSiteItem();
        record.itemId = fieldSetFlags()[0] ? this.itemId : (java.lang.Long) defaultValue(fields()[0]);
        record.vzSiteId = fieldSetFlags()[1] ? this.vzSiteId : (java.lang.String) defaultValue(fields()[1]);
        record.customerId = fieldSetFlags()[2] ? this.customerId : (java.lang.String) defaultValue(fields()[2]);
        record.customerName = fieldSetFlags()[3] ? this.customerName : (java.lang.String) defaultValue(fields()[3]);
        record.country = fieldSetFlags()[4] ? this.country : (java.lang.String) defaultValue(fields()[4]);
        record.state = fieldSetFlags()[5] ? this.state : (java.lang.String) defaultValue(fields()[5]);
        record.city = fieldSetFlags()[6] ? this.city : (java.lang.String) defaultValue(fields()[6]);
        record.zipCode = fieldSetFlags()[7] ? this.zipCode : (java.lang.String) defaultValue(fields()[7]);
        record.addressLine1 = fieldSetFlags()[8] ? this.addressLine1 : (java.lang.String) defaultValue(fields()[8]);
        record.addressLine2 = fieldSetFlags()[9] ? this.addressLine2 : (java.lang.String) defaultValue(fields()[9]);
        record.status = fieldSetFlags()[10] ? this.status : (java.lang.String) defaultValue(fields()[10]);
        record.validationError = fieldSetFlags()[11] ? this.validationError : (java.lang.String) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BulkSiteItem>
    WRITER$ = (org.apache.avro.io.DatumWriter<BulkSiteItem>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BulkSiteItem>
    READER$ = (org.apache.avro.io.DatumReader<BulkSiteItem>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
